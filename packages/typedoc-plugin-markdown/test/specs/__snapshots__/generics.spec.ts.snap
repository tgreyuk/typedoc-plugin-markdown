// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Generics: should compile class with type params 1`] = `
"[partial: breadcrumbs]

# ClassWithTypeParams\\<T, V\\>

[partial: comment]

## Type parameters

- \`T\`
- \`V\`


[partial: toc]

[partial: members]"
`;

exports[`Generics: should compile function with a simple type param' 1`] = `
"\`\`\`ts
functionWithTypeParam<A>(): boolean
\`\`\`

## Type parameters

- \`A\`


## Returns

\`boolean\`

[partial: sources]"
`;

exports[`Generics: should compile function with complex type params' 1`] = `
"\`\`\`ts
functionWithTypeParams<A, B, C>(): boolean
\`\`\`

[partial: comment]

## Type parameters

- \`A\` *extends* [\`ClassWithTypeParams\`](../classes/ClassWithTypeParams.md)\\<\`string\`, \`number\`, \`A\`\\>[partial: comment]
- \`B\` = \`string\` \\| \`boolean\`[partial: comment]
- \`C\` = \`string\`


## Returns

\`boolean\`

[partial: sources]"
`;

exports[`Generics: should compile generics with defaults' 1`] = `
"\`\`\`ts
genericsWithDefaults
\`\`\`



[partial: sources]"
`;

exports[`Generics: should compile type with nested generics' 1`] = `
"\`\`\`ts
nestedGenerics: Generic1<Generic2<Generic3<string>>>
\`\`\`



[partial: sources]"
`;
